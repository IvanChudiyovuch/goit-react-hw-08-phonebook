{"version":3,"file":"static/js/667.1f4ae52a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Form/Form.styled.jsx","components/ContactList/ContactsList.styled.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","components/ContactList/ContactsListItem.jsx","components/ContactList/ContactsList.jsx","pages/Contacts/Container.styled.jsx","pages/Contacts/Contacts.js"],"sourcesContent":["export const getFilter = state => state.filter;\nexport const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const selectLoading = state => state.contacts.loading;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectAllContacts = state => state.contacts.items;\n","import styled from '@emotion/styled';\n\nexport const Lable = styled.label`\n  padding: 0;\n  padding: ${p => p.theme.space[3]}px;\n  font-family: ${p => p.theme.fonts.monospace};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  padding: ${p => p.theme.space[1]}px;\n  height: 20px;\n  border: 1px solid ${p => p.theme.colors.black};\n  border-radius: 4px;\n`;\n\nexport const Forma = styled.form`\n  margin: ${p => p.theme.space[4]}px 0;\n  padding: ${p => p.theme.space[3]}px;\n  border: 1px solid ${p => p.theme.colors.black};\n  border-radius: 4px;\n  width: 300px;\n`;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  padding: ${p => p.theme.space[1]}px;\n  text-alight: centr;\n  border: 1px solid ${p => p.theme.colors.secondary};\n  border-radius: ${p => p.theme.radii.normal};\n  margin-left: ${p => p.theme.space[3]}px;\n  cursor: pointer;\n  background-color: ${p => p.theme.colors.accent};\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.accentFocus};\n  }\n`;\n\nexport const ItenInfoText = styled.p`\n  margin: ${p => p.theme.space[2]}px 0;\n  padding: ${p => p.theme.space[1]}px;\n  margin-right: ${p => p.theme.space[2]}px;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontWeights.s};\n`;\n","import styled from '@emotion/styled';\n\nexport const Load = styled.div`\n  display: flex;\n  justify-content: centr;\n  align-items: centr;\n  matgin: 0 auto;\n`;\n","import { TailSpin } from 'react-loader-spinner';\nimport { Load } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Load>\n      <TailSpin height=\"15\" width=\"15\" radius=\"1\" />\n    </Load>\n  );\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Lable, Input, Forma } from './Form.styled';\nimport { Button } from '../ContactList/ContactsList.styled';\nimport { Loader } from '../Loader/Loader';\nimport { getContacts, getIsLoading } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\n\nexport const Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const itemContact = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const dispatch = useDispatch();\n\n  const handleValueInputChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      let newContact = {\n        name,\n        number,\n      };\n\n      itemContact.find(\n        ({ name }) => name.toLowerCase() === newContact.name.toLowerCase()\n      )\n        ? alert(`${newContact.name} is already exist in your contacts!`)\n        : await dispatch(addContacts(newContact));\n\n      reset();\n    } catch (error) {\n      console.log('ERROR');\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Forma onSubmit={handleSubmit}>\n      <Lable>\n        Name\n        <Input\n          value={name}\n          onChange={handleValueInputChange}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Jacob Mercer\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"\n            Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Lable>\n\n      <Lable>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleValueInputChange}\n          placeholder=\"___-__-__\"\n        />\n      </Lable>\n      <Button type=\"submit\" disabled={isLoading}>\n        {isLoading && <Loader />} Add contact\n      </Button>\n    </Forma>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { Lable, Input } from '../Form/Form.styled';\nimport { changeFilter } from 'redux/contacts/actions';\n\nexport const Filter = () => {\n  const filterContact = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <Lable>\n      Find contacts by name\n      <Input type=\"text\" value={filterContact} onChange={handleChangeFilter} />\n    </Lable>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { FcBusinessman, FcCellPhone } from 'react-icons/fc';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, ItenInfoText } from './ContactsList.styled';\nimport { Loader } from '../Loader/Loader';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport { getIsLoading } from 'redux/contacts/selectors';\n\nexport const ContactsListItem = ({ contact }) => {\n  const isLoading = useSelector(getIsLoading);\n  const dispatch = useDispatch();\n\n  const deleteContact = () => {\n    dispatch(deleteContacts(contact.id));\n  };\n\n  return (\n    <>\n      <FcBusinessman size={20} />\n      <ItenInfoText>{contact.name}:</ItenInfoText>\n      <FcCellPhone />\n      <ItenInfoText>{contact.number}</ItenInfoText>\n      <Button\n        type=\"button\"\n        disabled={isLoading}\n        onClick={() => deleteContact(contact.id)}\n      >\n        {isLoading && <Loader size={10} />}\n        Delete\n      </Button>\n    </>\n  );\n};\n\nContactsListItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { ContactsListItem } from './ContactsListItem';\nimport { List, ListItem } from './ContactsList.styled';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\n\nexport const ContactsList = () => {\n  const itemContact = useSelector(getContacts);\n  const filterContact = useSelector(getFilter);\n\n  const visibleContacts = !filterContact\n    ? itemContact\n    : itemContact.filter(item =>\n        item.name.toLowerCase().includes(filterContact.toLocaleLowerCase())\n      );\n\n  return (\n    <List>\n      {visibleContacts &&\n        visibleContacts.map(contact => (\n          <ListItem key={contact.id}>\n            <ContactsListItem contact={contact} />\n          </ListItem>\n        ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 10px auto;\n  padding: ${p => p.theme.space[3]}px;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid black;\n  width: 400px;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  background: ${p => p.theme.colors.colorcell};\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nimport { Form } from '../../components/Form/Form';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactsList } from '../../components/ContactList/ContactsList';\nimport { Container } from './Container.styled.jsx';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts:</h2>\n      <Filter />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactsList />\n    </Container>\n  );\n}\n"],"names":["getFilter","state","filter","getContacts","contacts","items","getIsLoading","isLoading","selectLoading","loading","Lable","styled","p","theme","space","fonts","monospace","fontWeights","bold","Input","colors","black","Forma","List","ListItem","Button","secondary","radii","normal","accent","accentFocus","ItenInfoText","s","Load","Loader","height","width","radius","Form","useState","name","setName","number","setNumber","itemContact","useSelector","dispatch","useDispatch","handleValueInputChange","event","target","value","handleSubmit","preventDefault","newContact","find","toLowerCase","alert","addContacts","reset","console","log","onSubmit","onChange","type","placeholder","pattern","title","required","disabled","Filter","filterContact","e","changeFilter","ContactsListItem","contact","size","onClick","id","deleteContacts","ContactsList","visibleContacts","item","includes","toLocaleLowerCase","map","Container","colorcell","Contacts","useEffect","fetchContacts"],"sourceRoot":""}